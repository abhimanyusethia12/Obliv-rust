{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1","program":"/home/devanshu/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","stream_cipher","--edition=2018","/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"block-cipher\"","-C","metadata=ca254fd8befe4e8f","-C","extra-filename=-ca254fd8befe4e8f","--out-dir","/home/devanshu/Desktop/projects/pclub_projects/Crypto_summer/git_repo/Obliv-rust/impl/FSSRust/fss_rust_1/target/rls/debug/deps","-L","dependency=/home/devanshu/Desktop/projects/pclub_projects/Crypto_summer/git_repo/Obliv-rust/impl/FSSRust/fss_rust_1/target/rls/debug/deps","--extern","block_cipher=/home/devanshu/Desktop/projects/pclub_projects/Crypto_summer/git_repo/Obliv-rust/impl/FSSRust/fss_rust_1/target/rls/debug/deps/libblock_cipher-b76d448dc0ee3c05.rmeta","--extern","generic_array=/home/devanshu/Desktop/projects/pclub_projects/Crypto_summer/git_repo/Obliv-rust/impl/FSSRust/fss_rust_1/target/rls/debug/deps/libgeneric_array-2fc83b61c334b5c7.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/devanshu/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/devanshu/Desktop/projects/pclub_projects/Crypto_summer/git_repo/Obliv-rust/impl/FSSRust/fss_rust_1/target/rls/debug/deps/libstream_cipher-ca254fd8befe4e8f.rmeta"},"prelude":{"crate_id":{"name":"stream_cipher","disambiguator":[6138665563900547513,9115974236401438713]},"crate_root":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src","external_crates":[{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16347567532895737325,10433174518283571136]}},{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[6035154360143295752,3120051156278071757]}},{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[17970804288108720841,8277620835330235672]}},{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","num":4,"id":{"name":"generic_array","disambiguator":[12299203846953969479,14070333184040178109]}},{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","num":5,"id":{"name":"typenum","disambiguator":[16574785526192663555,11852271692604152690]}},{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","num":6,"id":{"name":"block_cipher","disambiguator":[5996808116748150608,16458485343713400560]}}],"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":0,"byte_end":5002,"line_start":1,"line_end":157,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":61},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":588,"byte_end":609,"line_start":22,"line_end":22,"column_start":25,"column_end":46},"alias_span":null,"name":"InvalidKeyNonceLength","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":54},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":611,"byte_end":620,"line_start":22,"line_end":22,"column_start":48,"column_end":57},"alias_span":null,"name":"LoopError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":647,"byte_end":651,"line_start":23,"line_end":23,"column_start":25,"column_end":29},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":2247},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":662,"byte_end":668,"line_start":23,"line_end":23,"column_start":40,"column_end":46},"alias_span":null,"name":"consts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":6,"index":0},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":713,"byte_end":725,"line_start":26,"line_end":26,"column_start":9,"column_end":21},"alias_span":null,"name":"block_cipher","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":0,"byte_end":5002,"line_start":1,"line_end":157,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":46},{"krate":0,"index":49}],"decl_id":null,"docs":" This crate defines a set of traits which define functionality of\n stream ciphers.","sig":null,"attributes":[{"value":"! This crate defines a set of traits which define functionality of","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":0,"byte_end":68,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"! stream ciphers.","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":69,"byte_end":88,"line_start":2,"line_end":2,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":89,"byte_end":92,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! See [RustCrypto/stream-ciphers](https://github.com/RustCrypto/stream-ciphers)","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":93,"byte_end":174,"line_start":4,"line_end":4,"column_start":1,"column_end":82}},{"value":"! for ciphers implementation.","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":175,"byte_end":206,"line_start":5,"line_end":5,"column_start":1,"column_end":32}},{"value":"no_std","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":208,"byte_end":218,"line_start":7,"line_end":7,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":357,"byte_end":380,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, rust_2018_idioms)","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":381,"byte_end":421,"line_start":11,"line_end":11,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":54},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/errors.rs","byte_start":5141,"byte_end":5150,"line_start":5,"line_end":5,"column_start":12,"column_end":21},"name":"LoopError","qualname":"::errors::LoopError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error which notifies that stream cipher has reached the end of a keystream.\n","sig":null,"attributes":[{"value":"/ Error which notifies that stream cipher has reached the end of a keystream.","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/errors.rs","byte_start":5020,"byte_end":5099,"line_start":3,"line_end":3,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":61},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/errors.rs","byte_start":5521,"byte_end":5542,"line_start":19,"line_end":19,"column_start":12,"column_end":33},"name":"InvalidKeyNonceLength","qualname":"::errors::InvalidKeyNonceLength","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error which notifies that key or/and nonce used in stream cipher\n initialization had an invalid length.\n","sig":null,"attributes":[{"value":"/ Error which notifies that key or/and nonce used in stream cipher","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/errors.rs","byte_start":5369,"byte_end":5437,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ initialization had an invalid length.","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/errors.rs","byte_start":5438,"byte_end":5479,"line_start":17,"line_end":17,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":24},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":969,"byte_end":972,"line_start":35,"line_end":35,"column_start":10,"column_end":13},"name":"Key","qualname":"::Key","value":"GenericArray<u8, <C as NewStreamCipher>::KeySize>","parent":null,"children":[],"decl_id":null,"docs":" Key for an algorithm that implements [`NewStreamCipher`].\n","sig":null,"attributes":[{"value":"/ Key for an algorithm that implements [`NewStreamCipher`].","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":898,"byte_end":959,"line_start":34,"line_end":34,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":26},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":1103,"byte_end":1108,"line_start":38,"line_end":38,"column_start":10,"column_end":15},"name":"Nonce","qualname":"::Nonce","value":"GenericArray<u8, <C as NewStreamCipher>::NonceSize>","parent":null,"children":[],"decl_id":null,"docs":" Nonce for an algorithm that implements [`NewStreamCipher`].\n","sig":null,"attributes":[{"value":"/ Nonce for an algorithm that implements [`NewStreamCipher`].","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":1030,"byte_end":1093,"line_start":37,"line_end":37,"column_start":1,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":28},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":1289,"byte_end":1304,"line_start":43,"line_end":43,"column_start":11,"column_end":26},"name":"NewStreamCipher","qualname":"::NewStreamCipher","value":"NewStreamCipher: Sized","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32}],"decl_id":null,"docs":" Stream cipher creation trait.","sig":null,"attributes":[{"value":"/ Stream cipher creation trait.","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":1168,"byte_end":1201,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":1202,"byte_end":1205,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ It can be used for creation of synchronous and asynchronous ciphers.","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":1206,"byte_end":1278,"line_start":42,"line_end":42,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":29},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":1349,"byte_end":1356,"line_start":45,"line_end":45,"column_start":10,"column_end":17},"name":"KeySize","qualname":"::NewStreamCipher::KeySize","value":"type KeySize: ArrayLength<u8>;","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Key size in bytes\n","sig":null,"attributes":[{"value":"/ Key size in bytes","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":1318,"byte_end":1339,"line_start":44,"line_end":44,"column_start":5,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":30},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":1413,"byte_end":1422,"line_start":48,"line_end":48,"column_start":10,"column_end":19},"name":"NonceSize","qualname":"::NewStreamCipher::NonceSize","value":"type NonceSize: ArrayLength<u8>;","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Nonce size in bytes\n","sig":null,"attributes":[{"value":"/ Nonce size in bytes","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":1380,"byte_end":1403,"line_start":47,"line_end":47,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":1527,"byte_end":1530,"line_start":51,"line_end":51,"column_start":8,"column_end":11},"name":"new","qualname":"::NewStreamCipher::new","value":"fn (key: &Key<Self>, nonce: &Nonce<Self>) -> Self","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Create new stream cipher instance from variable length key and nonce.\n","sig":null,"attributes":[{"value":"/ Create new stream cipher instance from variable length key and nonce.","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":1446,"byte_end":1519,"line_start":50,"line_end":50,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":1678,"byte_end":1685,"line_start":55,"line_end":55,"column_start":8,"column_end":15},"name":"new_var","qualname":"::NewStreamCipher::new_var","value":"fn (key: &[u8], nonce: &[u8]) -> Result<Self, InvalidKeyNonceLength>","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Create new stream cipher instance from variable length key and nonce.\n","sig":null,"attributes":[{"value":"/ Create new stream cipher instance from variable length key and nonce.","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":1583,"byte_end":1656,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":1661,"byte_end":1670,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":33},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":2168,"byte_end":2184,"line_start":69,"line_end":69,"column_start":11,"column_end":27},"name":"SyncStreamCipher","qualname":"::SyncStreamCipher","value":"SyncStreamCipher","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35}],"decl_id":null,"docs":" Synchronous stream cipher core trait.\n","sig":null,"attributes":[{"value":"/ Synchronous stream cipher core trait.","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":2116,"byte_end":2157,"line_start":68,"line_end":68,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":2527,"byte_end":2542,"line_start":79,"line_end":79,"column_start":8,"column_end":23},"name":"apply_keystream","qualname":"::SyncStreamCipher::apply_keystream","value":"fn (&mut self, data: &mut [u8]) -> ()","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Apply keystream to the data.","sig":null,"attributes":[{"value":"/ Apply keystream to the data.","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":2191,"byte_end":2223,"line_start":70,"line_end":70,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":2228,"byte_end":2231,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ It will XOR generated keystream with the data, which can be both","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":2236,"byte_end":2304,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/ encryption and decryption.","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":2309,"byte_end":2339,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":2344,"byte_end":2347,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":2352,"byte_end":2364,"line_start":75,"line_end":75,"column_start":5,"column_end":17}},{"value":"/ If end of the keystream will be reached with the given data length,","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":2369,"byte_end":2440,"line_start":76,"line_end":76,"column_start":5,"column_end":76}},{"value":"/ method will panic without modifying the provided `data`.","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":2445,"byte_end":2505,"line_start":77,"line_end":77,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":2510,"byte_end":2519,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":2992,"byte_end":3011,"line_start":91,"line_end":91,"column_start":8,"column_end":27},"name":"try_apply_keystream","qualname":"::SyncStreamCipher::try_apply_keystream","value":"fn (&mut self, data: &mut [u8]) -> Result<(), LoopError>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Apply keystream to the data, but return an error if end of a keystream\n will be reached.","sig":null,"attributes":[{"value":"/ Apply keystream to the data, but return an error if end of a keystream","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":2721,"byte_end":2795,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ will be reached.","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":2800,"byte_end":2820,"line_start":87,"line_end":87,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":2825,"byte_end":2828,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If end of the keystream will be achieved with the given data length,","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":2833,"byte_end":2905,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ method will return `Err(LoopError)` without modifying provided `data`.","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":2910,"byte_end":2984,"line_start":90,"line_end":90,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":36},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":3124,"byte_end":3144,"line_start":95,"line_end":95,"column_start":11,"column_end":31},"name":"SyncStreamCipherSeek","qualname":"::SyncStreamCipherSeek","value":"SyncStreamCipherSeek","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38}],"decl_id":null,"docs":" Synchronous stream cipher seeking trait.\n","sig":null,"attributes":[{"value":"/ Synchronous stream cipher seeking trait.","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":3069,"byte_end":3113,"line_start":94,"line_end":94,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":3230,"byte_end":3241,"line_start":97,"line_end":97,"column_start":8,"column_end":19},"name":"current_pos","qualname":"::SyncStreamCipherSeek::current_pos","value":"fn (&self) -> u64","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Return current position of a keystream in bytes from the beginning.\n","sig":null,"attributes":[{"value":"/ Return current position of a keystream in bytes from the beginning.","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":3151,"byte_end":3222,"line_start":96,"line_end":96,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":3317,"byte_end":3321,"line_start":100,"line_end":100,"column_start":8,"column_end":12},"name":"seek","qualname":"::SyncStreamCipherSeek::seek","value":"fn (&mut self, pos: u64) -> ()","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Seek keystream to the given `pos` in bytes.\n","sig":null,"attributes":[{"value":"/ Seek keystream to the given `pos` in bytes.","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":3262,"byte_end":3309,"line_start":99,"line_end":99,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":39},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":3546,"byte_end":3558,"line_start":108,"line_end":108,"column_start":11,"column_end":23},"name":"StreamCipher","qualname":"::StreamCipher","value":"StreamCipher","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41}],"decl_id":null,"docs":" Stream cipher core trait which covers both synchronous and asynchronous\n ciphers.","sig":null,"attributes":[{"value":"/ Stream cipher core trait which covers both synchronous and asynchronous","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":3347,"byte_end":3422,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/ ciphers.","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":3423,"byte_end":3435,"line_start":104,"line_end":104,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":3436,"byte_end":3439,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Note that for synchronous ciphers `encrypt` and `decrypt` are equivalent to","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":3440,"byte_end":3519,"line_start":106,"line_end":106,"column_start":1,"column_end":80}},{"value":"/ each other.","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":3520,"byte_end":3535,"line_start":107,"line_end":107,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":3599,"byte_end":3606,"line_start":110,"line_end":110,"column_start":8,"column_end":15},"name":"encrypt","qualname":"::StreamCipher::encrypt","value":"fn (&mut self, data: &mut [u8]) -> ()","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Encrypt data in place.\n","sig":null,"attributes":[{"value":"/ Encrypt data in place.","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":3565,"byte_end":3591,"line_start":109,"line_end":109,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":3675,"byte_end":3682,"line_start":113,"line_end":113,"column_start":8,"column_end":15},"name":"decrypt","qualname":"::StreamCipher::decrypt","value":"fn (&mut self, data: &mut [u8]) -> ()","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Decrypt data in place.\n","sig":null,"attributes":[{"value":"/ Decrypt data in place.","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":3641,"byte_end":3667,"line_start":112,"line_end":112,"column_start":5,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":46},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":4184,"byte_end":4199,"line_start":131,"line_end":131,"column_start":11,"column_end":26},"name":"FromBlockCipher","qualname":"::FromBlockCipher","value":"FromBlockCipher","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48}],"decl_id":null,"docs":" Trait for initializing a stream cipher from a block cipher\n","sig":null,"attributes":[{"value":"/ Trait for initializing a stream cipher from a block cipher","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":4022,"byte_end":4084,"line_start":128,"line_end":128,"column_start":1,"column_end":63}},{"value":"cfg(feature = \"block-cipher\")","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":4085,"byte_end":4117,"line_start":129,"line_end":129,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":47},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":4232,"byte_end":4243,"line_start":133,"line_end":133,"column_start":10,"column_end":21},"name":"BlockCipher","qualname":"::FromBlockCipher::BlockCipher","value":"type BlockCipher: BlockCipher + NewBlockCipher;","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" Block cipher\n","sig":null,"attributes":[{"value":"/ Block cipher","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":4206,"byte_end":4222,"line_start":132,"line_end":132,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":4397,"byte_end":4414,"line_start":137,"line_end":137,"column_start":8,"column_end":25},"name":"from_block_cipher","qualname":"::FromBlockCipher::from_block_cipher","value":"fn (cipher: Self::BlockCipher, nonce: &block_cipher::Block<Self::BlockCipher>) -> Self","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" Instantiate a stream cipher from a block cipher\n","sig":null,"attributes":[{"value":"/ Instantiate a stream cipher from a block cipher","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":4280,"byte_end":4331,"line_start":135,"line_end":135,"column_start":5,"column_end":56}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/errors.rs","byte_start":5175,"byte_end":5184,"line_start":7,"line_end":7,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/errors.rs","byte_start":5567,"byte_end":5588,"line_start":21,"line_end":21,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":9}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":3758,"byte_end":3759,"line_start":116,"line_end":116,"column_start":44,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":4586,"byte_end":4587,"line_start":144,"line_end":144,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/errors.rs","byte_start":5175,"byte_end":5184,"line_start":7,"line_end":7,"column_start":23,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":54},"to":{"krate":1,"index":6074}},{"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/errors.rs","byte_start":5567,"byte_end":5588,"line_start":21,"line_end":21,"column_start":23,"column_end":44},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":61},"to":{"krate":1,"index":6074}},{"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":1306,"byte_end":1311,"line_start":43,"line_end":43,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":1,"index":1909},"to":{"krate":0,"index":28}},{"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":3758,"byte_end":3759,"line_start":116,"line_end":116,"column_start":44,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":43},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/devanshu/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.4.1/src/lib.rs","byte_start":4586,"byte_end":4587,"line_start":144,"line_end":144,"column_start":29,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":50},"to":{"krate":0,"index":28}}]}